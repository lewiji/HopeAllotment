{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/pages/contact.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","ContactPage","functionURL","useState","name","setName","email","setEmail","phone","setPhone","message","setMessage","submitting","setSubmitting","setError","success","setSuccess","onSubmit","fn","event","a","preventDefault","fetch","method","headers","body","URLSearchParams","fromEmail","subject","toString","response","status","json","self","this","args","arguments","apply","err","undefined","keywords","title","className","action","htmlFor","id","placeholder","type","onChange","e","target","rows","disabled","onClick","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-contact-js-2706694a255fd16782de.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useState } from \"react\";\n\nimport SEO from \"../components/seo\";\n\nfunction ContactPage() {\n  const functionURL = \"https://almond-fox-7125.twil.io/send-email\";\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (name == \"\" || email == \"\" || message == \"\") {\n      setError(\"Name, email and message fields are required.\");\n      return;\n    }\n    setSubmitting(true);\n    const response = await fetch(functionURL, {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n      },\n      body: new URLSearchParams({\n        fromEmail: email,\n        subject: \"New message from HOPE allotment website\",\n        body: message,\n        name,\n        phone,\n      }).toString(),\n    });\n    if (response.status === 200) {\n      setError(false);\n      setSubmitting(false);\n      setEmail(\"\");\n      setName(\"\");\n      setPhone(\"\");\n      setMessage(\"\");\n      setSuccess(\"Message sent successfully. Someone will be in touch soon!\");\n    } else {\n      const json = await response.json();\n      setError(\"Failed to send email. Please try again later.\");\n      setSubmitting(false);\n      setSuccess(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <SEO\n        keywords={[`hope`, `community`, `allotment`, `volunteers`]}\n        title=\"Contact\"\n      />\n      <section className=\"text-center\">\n        <h2 className=\"inline-block p-3 mb-6 text-2xl mx-auto font-bold headingpattern uppercase\">\n          Contact Us\n        </h2>\n        <div className=\"font-medium flex flex-col mx-auto tracking-normal md:tracking-wide text-justify w-3/4\">\n          <p className=\"mb-2\">\n            We want the people of Sheffield to get involved with our allotments.\n            We are always looking for new people who want to take an active role\n            in our group.\n          </p>\n          <p className=\"mb-2\"></p>\n          <p className=\"mb-2\">\n            If you want to meet new people, get more exercise, or simply have a\n            keen interest in gardening, we want to hear from you.\n          </p>\n          <p className=\"mb-6\">Please leave a contact message below.</p>\n        </div>\n\n        <div className=\" text-green-700 font-semibold text-2xl\">{success}</div>\n        <div className=\"text-red-600 font-semibold mb-3\">{error}</div>\n\n        <form className=\"mx-auto md:w-1/2\" method=\"post\" action={functionURL}>\n          <label\n            className=\"block mb-2 text-xs text-left font-bold uppercase\"\n            htmlFor=\"name\"\n          >\n            Name<span className=\"text-red-600 font-semibold\">*</span>\n          </label>\n\n          <input\n            className=\"w-full mb-6 form-input\"\n            id=\"name\"\n            placeholder=\"Your Name\"\n            type=\"text\"\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            value={name}\n          />\n\n          <label\n            className=\"block mb-2 text-xs text-left font-bold uppercase\"\n            htmlFor=\"email\"\n          >\n            Email<span className=\"text-red-600 font-semibold\">*</span>\n          </label>\n\n          <input\n            className=\"w-full mb-6 form-input\"\n            id=\"email\"\n            placeholder=\"Your Email\"\n            type=\"text\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            value={email}\n          />\n\n          <label\n            className=\"block mb-2 text-xs text-left font-bold uppercase\"\n            htmlFor=\"phone\"\n          >\n            Phone\n          </label>\n\n          <input\n            className=\"w-full mb-6 form-input\"\n            id=\"phone\"\n            placeholder=\"Your Phone Number\"\n            type=\"text\"\n            onChange={(e) => {\n              setPhone(e.target.value);\n            }}\n            value={phone}\n          />\n\n          <label\n            className=\"block mb-2 text-xs text-left font-bold uppercase\"\n            htmlFor=\"message\"\n          >\n            Message<span className=\"text-red-600 font-semibold\">*</span>\n          </label>\n\n          <textarea\n            className=\"w-full mb-6 form-textarea\"\n            id=\"message\"\n            placeholder=\"Say something...\"\n            rows=\"8\"\n            onChange={(e) => {\n              setMessage(e.target.value);\n            }}\n            value={message}\n          />\n\n          <button\n            disabled={submitting}\n            onClick={onSubmit}\n            className=\"px-4 py-2 text-sm font-bold text-white bg-gray-700 border-b-4 border-gray-800 rounded hover:border-gray-700 hover:bg-gray-600\"\n          >\n            Submit\n          </button>\n        </form>\n      </section>\n    </div>\n  );\n}\n\nexport default ContactPage;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}